# Generated by Django 4.2.11 on 2024-06-17 08:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import pgvector.django


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('eduGptApp', '0001_enable_pgvector_extension'),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('publisher', models.CharField(max_length=255)),
                ('link', models.URLField()),
                ('subject', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('assistant', models.JSONField(blank=True, max_length=1000, null=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='book', to='eduGptApp.book')),
            ],
        ),
        migrations.CreateModel(
            name='ChatHeader',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('userId', models.IntegerField()),
                ('name', models.CharField(default='hello', max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('category', models.CharField(max_length=100)),
                ('class_name', models.CharField(db_column='class', max_length=100)),
                ('subject', models.CharField(max_length=100)),
                ('chapter', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_at_text', models.CharField(blank=True, default='', max_length=30)),
                ('created_at_unix', models.IntegerField(default=0)),
                ('threads', models.JSONField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Chats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.JSONField()),
                ('eduGpt', models.JSONField()),
                ('referenceData', models.JSONField(default={})),
                ('snipData', models.JSONField(default={})),
                ('usedForRevision', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_at_text', models.CharField(blank=True, default='', max_length=30)),
                ('created_at_unix', models.IntegerField(default=0)),
                ('conceptCovered', models.TextField(null=True)),
                ('ques_type', models.CharField(choices=[('SNIP', 'snip'), ('QUIZ', 'quiz'), ('QUESTION', 'Question')], default='QUIZ', max_length=200)),
                ('chat_header', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chats', to='eduGptApp.chatheader')),
            ],
        ),
        migrations.CreateModel(
            name='PushedMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.JSONField()),
                ('name', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='QueryContext',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chatHeaderId', models.TextField()),
                ('context', models.JSONField()),
                ('snips', models.JSONField()),
                ('query', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('address', models.TextField()),
                ('board', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='SchoolClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=10)),
                ('books', models.JSONField()),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='eduGptApp.school')),
            ],
        ),
        migrations.CreateModel(
            name='TestQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('MCQ', 'Multiple Choice Question'), ('LONG', 'Long Question'), ('SHORT', 'Short Question')], max_length=5)),
                ('question_text', models.TextField()),
                ('options', models.TextField(blank=True, help_text='For MCQs, store options as JSON.', null=True)),
                ('marks', models.IntegerField()),
                ('answer', models.TextField(blank=True, null=True)),
                ('chapter', models.CharField(blank=True, max_length=1000, null=True)),
                ('subject', models.CharField(blank=True, max_length=1000, null=True)),
                ('standard', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'verbose_name': 'Test Question',
                'verbose_name_plural': 'Test Questions',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('class_field', models.CharField(max_length=50)),
                ('subject', models.CharField(max_length=100)),
                ('chapter', models.CharField(max_length=100)),
                ('questions', models.ManyToManyField(related_name='tests', to='eduGptApp.testquestion')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('classesInfo', models.JSONField()),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teachers', to='eduGptApp.school')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='eduGptApp.school')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('class_assigned', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='eduGptApp.schoolclass')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='eduGptApp.school')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='schoolclass',
            name='subjects',
            field=models.ManyToManyField(related_name='classes', to='eduGptApp.subject'),
        ),
        migrations.CreateModel(
            name='FeedBack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedBack', models.JSONField(null=True)),
                ('chatHeader', models.CharField(null=True)),
                ('version', models.IntegerField(null=True)),
                ('completed', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('chat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chats', to='eduGptApp.chats')),
            ],
        ),
        migrations.CreateModel(
            name='ChapterReferenceText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chunk_text', models.TextField()),
                ('metadata', models.TextField()),
                ('embedding', pgvector.django.VectorField(dimensions=1536)),
                ('conceptName', models.TextField(null=True)),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapter_reference_texts', to='eduGptApp.chapter')),
            ],
        ),
        migrations.CreateModel(
            name='ChapterReferenceData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referenceData', models.JSONField()),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapterReferenceData', to='eduGptApp.chapter')),
            ],
        ),
        migrations.CreateModel(
            name='ChapterImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('snipImgUrl', models.TextField()),
                ('snipImgName', models.CharField(max_length=300)),
                ('description', models.TextField()),
                ('relevantTextFromChapter', models.TextField()),
                ('scale', models.FloatField()),
                ('imgNum', models.IntegerField()),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='snipChapter', to='eduGptApp.chapter')),
            ],
        ),
        migrations.CreateModel(
            name='ChapterContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('htmlString', models.TextField()),
                ('page', models.IntegerField()),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapter', to='eduGptApp.chapter')),
            ],
        ),
    ]
